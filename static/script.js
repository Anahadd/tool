let uploadedFileId=null,ws=null;document.addEventListener("DOMContentLoaded",()=>{checkApifyToken(),setupEventListeners(),connectWebSocket()});function setupEventListeners(){document.getElementById("saveTokenBtn").addEventListener("click",saveApifyToken),document.getElementById("fileInput").addEventListener("change",handleFileSelect),document.getElementById("connectSheetsBtn").addEventListener("click",connectSheets),document.getElementById("saveDefaultsBtn").addEventListener("click",saveDefaults),document.getElementById("runUpdateBtn").addEventListener("click",runUpdate)}function showStatus(e,t="info"){const n=document.getElementById("statusBar"),a=document.getElementById("statusMessage"),o=document.getElementById("statusIcon");o.textContent={success:"✓",error:"✗",warning:"⚠",info:"ℹ️"}[t]||"ℹ️",a.textContent=e,n.className="status-bar",n.classList.add(t),n.classList.remove("hidden"),"success"===t&&setTimeout(()=>n.classList.add("hidden"),5e3)}async function checkApifyToken(){try{const e=await fetch("/api/check-apify-token");(await e.json()).is_set&&showStatus("✓ APIFY token is configured","success")}catch(e){console.error("Error:",e)}}async function saveApifyToken(){const e=document.getElementById("apifyToken").value.trim();if(!e)return void showStatus("Please enter your APIFY token","error");try{const t=new FormData;t.append("token",e);(await(await fetch("/api/set-apify-token",{method:"POST",body:t})).json()).success&&(showStatus("✓ APIFY token saved successfully","success"),document.getElementById("apifyToken").value="")}catch(e){showStatus("Failed to save token: "+e.message,"error")}}function handleDrop(e){e.preventDefault(),e.stopPropagation(),document.getElementById("dropZone").classList.remove("drag-over");const t=e.dataTransfer.files;t.length>0&&uploadFile(t[0])}function handleDragOver(e){e.preventDefault(),e.stopPropagation(),document.getElementById("dropZone").classList.add("drag-over")}function handleDragLeave(e){e.preventDefault(),e.stopPropagation(),document.getElementById("dropZone").classList.remove("drag-over")}function handleFileSelect(e){const t=e.target.files;t.length>0&&uploadFile(t[0])}async function uploadFile(e){if(!e.name.endsWith(".json"))return void showStatus("Please upload a JSON file","error");showStatus("Uploading credentials...","info");try{const t=new FormData;t.append("file",e);const n=await(await fetch("/api/upload-credentials",{method:"POST",body:t})).json();if(n.success){uploadedFileId=n.file_id;const t=document.getElementById("dropContent"),a=document.getElementById("fileInfo");document.getElementById("fileName").textContent=`✓ ${e.name}`,t.classList.add("hidden"),a.classList.remove("hidden"),document.getElementById("connectSheetsBtn").disabled=!1,showStatus("✓ Credentials uploaded successfully","success")}}catch(e){showStatus("Upload failed: "+e.message,"error")}}function clearFile(){uploadedFileId=null,document.getElementById("dropContent").classList.remove("hidden"),document.getElementById("fileInfo").classList.add("hidden"),document.getElementById("connectSheetsBtn").disabled=!0,document.getElementById("fileInput").value=""}async function connectSheets(){if(!uploadedFileId)return void showStatus("Please upload credentials first","error");showStatus("Connecting to Google Sheets...","info");try{const e=new FormData;e.append("file_id",uploadedFileId);(await(await fetch("/api/connect-sheets",{method:"POST",body:e})).json()).success&&showStatus("✓ Successfully connected to Google Sheets!","success")}catch(e){showStatus("Connection failed: "+e.message,"error")}}async function saveDefaults(){const e=document.getElementById("spreadsheetUrl").value.trim(),t=document.getElementById("worksheetName").value.trim();if(!e||!t)return void showStatus("Please enter both spreadsheet URL and worksheet name","error");try{const n=new FormData;n.append("spreadsheet",e),n.append("worksheet",t);(await(await fetch("/api/set-defaults",{method:"POST",body:n})).json()).success&&showStatus("✓ Defaults saved successfully","success")}catch(e){showStatus("Failed to save defaults: "+e.message,"error")}}async function runUpdate(){const e=document.getElementById("spreadsheetUrl").value.trim(),t=document.getElementById("worksheetName").value.trim(),n=document.getElementById("disableColumns").value.trim(),a=document.getElementById("rowRange").value.trim(),o=document.getElementById("overrideData").checked,d=document.getElementById("runUpdateBtn"),c=document.getElementById("runBtnText"),s=document.getElementById("runBtnSpinner");d.disabled=!0,c.classList.add("hidden"),s.classList.remove("hidden"),showStatus("⏳ Update in progress...","info");try{const d=new FormData;e&&d.append("spreadsheet",e),t&&d.append("worksheet",t),uploadedFileId&&d.append("file_id",uploadedFileId),n&&d.append("disable_columns",n),d.append("override",o),a&&(parts=a.split(":"),2===parts.length&&(d.append("start_row",parseInt(parts[0])),d.append("end_row",parseInt(parts[1])))),(await(await fetch("/api/update-sheets",{method:"POST",body:d})).json()).success?showStatus("✓ Sheet updated successfully!","success"):showStatus("Update failed","error")}catch(e){showStatus("✗ Update failed: "+e.message,"error")}finally{d.disabled=!1,c.classList.remove("hidden"),s.classList.add("hidden")}}function connectWebSocket(){const e=("https:"===window.location.protocol?"wss:":"ws:")+"//"+window.location.host+"/ws";(ws=new WebSocket(e)).onopen=()=>console.log("WebSocket connected"),ws.onclose=()=>setTimeout(connectWebSocket,5e3),ws.onerror=e=>console.error("WebSocket error:",e)}function toggleAdvanced(){const e=document.getElementById("advancedOptions"),t=document.getElementById("advancedToggle");e.classList.contains("hidden")?(e.classList.remove("hidden"),t.textContent="▲"):(e.classList.add("hidden"),t.textContent="▼")}

